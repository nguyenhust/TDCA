//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    TT_AnhVideo_Info
// ObjectType:  TT_AnhVideo_Info
// CSLAType:    ReadOnlyObject

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;
using NETLINK.LIB;

namespace TruyenThong.LIB
{

    /// <summary>
    /// TT_AnhVideo_Info (read only object).<br/>
    /// This is a generated base class of <see cref="TT_AnhVideo_Info"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is an item of <see cref="TT_AnhVideo_Coll"/> collection.
    /// </remarks>
    [Serializable]
    public partial class TT_AnhVideo_Info : ReadOnlyBase<TT_AnhVideo_Info>
    {

        #region Static Fields

        private static Int64 _lastID;

        #endregion

        #region Business Properties

        /// <summary>
        /// Gets the ID.
        /// </summary>
        /// <value>The ID.</value>
        public Int64 ID { get; private set; }

        /// <summary>
        /// Gets the IDSu Kien.
        /// </summary>
        /// <value>The IDSu Kien.</value>
        public Int64 IDSuKien { get; private set; }

        /// <summary>
        /// Gets the IDCan Bo.
        /// </summary>
        /// <value>The IDCan Bo.</value>
        public Int64 IDCanBo { get; private set; }

        /// <summary>
        /// Gets the Loai.
        /// </summary>
        /// <value><c>true</c> if Loai; <c>false</c> if not Loai; otherwise, <c>null</c>.</value>
        public bool? Loai { get; private set; }

        /// <summary>
        /// Gets the So Luong.
        /// </summary>
        /// <value>The So Luong.</value>
        public int? SoLuong { get; private set; }

        /// <summary>
        /// Gets the Duong Dan.
        /// </summary>
        /// <value>The Duong Dan.</value>
        public string DuongDan { get; private set; }

        /// <summary>
        /// Gets the Ghi Chu.
        /// </summary>
        /// <value>The Ghi Chu.</value>
        public string GhiChu { get; private set; }
        public string SuKien { get; private set; }
        public string CanBo { get; private set; }

        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Loads a <see cref="TT_AnhVideo_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        /// <returns>A reference to the fetched <see cref="TT_AnhVideo_Info"/> object.</returns>
        internal static TT_AnhVideo_Info GetTT_AnhVideo_Info(SafeDataReader dr)
        {
            TT_AnhVideo_Info obj = new TT_AnhVideo_Info();
            obj.Fetch(dr);
            return obj;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="TT_AnhVideo_Info"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        private TT_AnhVideo_Info()
        {
            // Prevent direct creation
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="TT_AnhVideo_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            ID = dr.GetInt64("ID");
            IDSuKien = dr.GetInt64("IDSuKien");
            IDCanBo = dr.GetInt64("IDCanBo");
            Loai = dr.GetBoolean("Loai");
            SoLuong = dr.GetInt32("SoLuong");
            DuongDan = dr.GetString("DuongDan");
            GhiChu = dr.GetString("GhiChu");
            SuKien = dr.GetString("SuKien");
            CanBo = dr.GetString("CanBo");
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        #endregion

    }
}
