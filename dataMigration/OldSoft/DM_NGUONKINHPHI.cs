//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    DM_NGUONKINHPHI
// ObjectType:  DM_NGUONKINHPHI
// CSLAType:    ReadOnlyObject

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;
using NETLINK.LIB;

namespace oldSoft
{

    /// <summary>
    /// DM_NGUONKINHPHI (read only object).<br/>
    /// This is a generated base class of <see cref="DM_NGUONKINHPHI"/> business object.
    /// This class is a root object.
    /// </summary>
    [Serializable]
    public partial class DM_NGUONKINHPHI : ReadOnlyBase<DM_NGUONKINHPHI>
    {

        #region Business Properties

        /// <summary>
        /// Maintains metadata about <see cref="MA_NGUONKINHPHI_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int> MA_NGUONKINHPHI_IDProperty = RegisterProperty<int>(p => p.MA_NGUONKINHPHI_ID, "MA NGUONKINHPHI ID");
        /// <summary>
        /// CDT.DM_NGUONKINHPHI.MA_NGUONKINHPHI_ID
        /// </summary>
        /// <value>The MA NGUONKINHPHI ID.</value>
        public int MA_NGUONKINHPHI_ID
        {
            get { return GetProperty(MA_NGUONKINHPHI_IDProperty); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_NGUONKINHPHI"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_NGUONKINHPHIProperty = RegisterProperty<string>(p => p.MA_NGUONKINHPHI, "MA NGUONKINHPHI");
        /// <summary>
        /// CDT.DM_NGUONKINHPHI.MA_NGUONKINHPHI
        /// </summary>
        /// <value>The MA NGUONKINHPHI.</value>
        public string MA_NGUONKINHPHI
        {
            get { return GetProperty(MA_NGUONKINHPHIProperty); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TEN_NGUONKINHPHI"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TEN_NGUONKINHPHIProperty = RegisterProperty<string>(p => p.TEN_NGUONKINHPHI, "TEN NGUONKINHPHI", null);
        /// <summary>
        /// CDT.DM_NGUONKINHPHI.TEN_NGUONKINHPHI
        /// </summary>
        /// <value>The TEN NGUONKINHPHI.</value>
        public string TEN_NGUONKINHPHI
        {
            get { return GetProperty(TEN_NGUONKINHPHIProperty); }
        }

        #endregion

        #region Factory Methods

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="DM_NGUONKINHPHI"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        private DM_NGUONKINHPHI()
        {
            // Prevent direct creation
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="DM_NGUONKINHPHI"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            LoadProperty(MA_NGUONKINHPHI_IDProperty, dr.GetInt32("MA_NGUONKINHPHI_ID"));
            LoadProperty(MA_NGUONKINHPHIProperty, dr.GetString("MA_NGUONKINHPHI"));
            LoadProperty(TEN_NGUONKINHPHIProperty, dr.GetString("TEN_NGUONKINHPHI"));
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        #endregion

    }
}
