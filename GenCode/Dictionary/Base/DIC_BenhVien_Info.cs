//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    DIC_BenhVien_Info
// ObjectType:  DIC_BenhVien_Info
// CSLAType:    ReadOnlyObject

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;

namespace Dictionary
{

    /// <summary>
    /// DIC_BenhVien_Info (read only object).<br/>
    /// This is a generated base class of <see cref="DIC_BenhVien_Info"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is an item of <see cref="DIC_BenhVien_Coll"/> collection.
    /// </remarks>
    [Serializable]
    public partial class DIC_BenhVien_Info : ReadOnlyBase<DIC_BenhVien_Info>
    {

        #region Static Fields

        private static Int64 _lastID;

        #endregion

        #region Business Properties

        /// <summary>
        /// Gets the ID.
        /// </summary>
        /// <value>The ID.</value>
        public Int64 ID { get; private set; }

        /// <summary>
        /// Gets the Ma.
        /// </summary>
        /// <value>The Ma.</value>
        public string Ma { get; private set; }

        /// <summary>
        /// Gets the Ten.
        /// </summary>
        /// <value>The Ten.</value>
        public string Ten { get; private set; }

        /// <summary>
        /// Gets the IDTinh.
        /// </summary>
        /// <value>The IDTinh.</value>
        public Int64 IDTinh { get; private set; }

        /// <summary>
        /// Gets the Dien Tich.
        /// </summary>
        /// <value>The Dien Tich.</value>
        public Decimal? DienTich { get; private set; }

        /// <summary>
        /// Gets the Dac Diem.
        /// </summary>
        /// <value>The Dac Diem.</value>
        public string DacDiem { get; private set; }

        /// <summary>
        /// Gets the Khoang Cach.
        /// </summary>
        /// <value>The Khoang Cach.</value>
        public Decimal? KhoangCach { get; private set; }

        /// <summary>
        /// Gets the Email.
        /// </summary>
        /// <value>The Email.</value>
        public string Email { get; private set; }

        /// <summary>
        /// Gets the Fax.
        /// </summary>
        /// <value>The Fax.</value>
        public string Fax { get; private set; }

        /// <summary>
        /// Gets the IDLoai.
        /// </summary>
        /// <value>The IDLoai.</value>
        public int? IDLoai { get; private set; }

        /// <summary>
        /// Gets the Giuong TK.
        /// </summary>
        /// <value>The Giuong TK.</value>
        public int? GiuongTK { get; private set; }

        /// <summary>
        /// Gets the Giuong KH.
        /// </summary>
        /// <value>The Giuong KH.</value>
        public int? GiuongKH { get; private set; }

        /// <summary>
        /// Gets the Khoa LS.
        /// </summary>
        /// <value>The Khoa LS.</value>
        public int? KhoaLS { get; private set; }

        /// <summary>
        /// Gets the Khoa CLS.
        /// </summary>
        /// <value>The Khoa CLS.</value>
        public int? KhoaCLS { get; private set; }

        /// <summary>
        /// Gets the Phong.
        /// </summary>
        /// <value>The Phong.</value>
        public int? Phong { get; private set; }

        /// <summary>
        /// Gets the Ghi Chu.
        /// </summary>
        /// <value>The Ghi Chu.</value>
        public string GhiChu { get; private set; }

        /// <summary>
        /// Gets the Su Dung.
        /// </summary>
        /// <value><c>true</c> if Su Dung; <c>false</c> if not Su Dung; otherwise, <c>null</c>.</value>
        public bool? SuDung { get; private set; }

        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Loads a <see cref="DIC_BenhVien_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        /// <returns>A reference to the fetched <see cref="DIC_BenhVien_Info"/> object.</returns>
        internal static DIC_BenhVien_Info GetDIC_BenhVien_Info(SafeDataReader dr)
        {
            DIC_BenhVien_Info obj = new DIC_BenhVien_Info();
            obj.Fetch(dr);
            return obj;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="DIC_BenhVien_Info"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        private DIC_BenhVien_Info()
        {
            // Prevent direct creation
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="DIC_BenhVien_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            ID = data.ID;
            Ma = data.Ma;
            Ten = data.Ten;
            IDTinh = data.IDTinh;
            DienTich = data.DienTich;
            DacDiem = data.DacDiem;
            KhoangCach = data.KhoangCach;
            Email = data.Email;
            Fax = data.Fax;
            IDLoai = data.IDLoai;
            GiuongTK = data.GiuongTK;
            GiuongKH = data.GiuongKH;
            KhoaLS = data.KhoaLS;
            KhoaCLS = data.KhoaCLS;
            Phong = data.Phong;
            GhiChu = data.GhiChu;
            SuDung = data.SuDung;
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        #endregion

    }
}
