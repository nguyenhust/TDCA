//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    ADM_NhomNguoiDung_Info
// ObjectType:  ADM_NhomNguoiDung_Info
// CSLAType:    ReadOnlyObject

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;
using NETLINK.LIB;

namespace Authoration.LIB
{

    /// <summary>
    /// ADM_NhomNguoiDung_Info (read only object).<br/>
    /// This is a generated base class of <see cref="ADM_NhomNguoiDung_Info"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is an item of <see cref="ADM_NhomNguoiDung_Coll"/> collection.
    /// </remarks>
    [Serializable]
    public partial class ADM_NhomNguoiDung_Info : ReadOnlyBase<ADM_NhomNguoiDung_Info>
    {

        #region Static Fields

        private static Int64 _lastID;

        #endregion

        #region Business Properties

        /// <summary>
        /// Gets the ID.
        /// </summary>
        /// <value>The ID.</value>
        public Int64 ID { get; private set; }

        /// <summary>
        /// Gets the Ten Nhom.
        /// </summary>
        /// <value>The Ten Nhom.</value>
        public string TenNhom { get; private set; }

        /// <summary>
        /// Gets the Mo Ta.
        /// </summary>
        /// <value>The Mo Ta.</value>
        public string MoTa { get; private set; }

        /// <summary>
        /// Gets the Hoat Dong.
        /// </summary>
        /// <value><c>true</c> if Hoat Dong; otherwise, <c>false</c>.</value>
        public bool HoatDong { get; private set; }

        #endregion

        #region Authoration
        public static bool CanGetObject()
        {
            bool result = false;
            if (Csla.ApplicationContext.User.IsInRole("NhomNguoiDung:S")
                || Csla.ApplicationContext.User.Identity.Name.ToUpper() == "SYSMAN")
                result = true;
            return result;
        }

        public static bool CanAddObject()
        {
            bool result = false;
            if (Csla.ApplicationContext.User.IsInRole("NhomNguoiDung:I")
                || Csla.ApplicationContext.User.Identity.Name.ToUpper() == "SYSMAN")
                result = true;
            return result;
        }

        public static bool CanEditObject()
        {
            bool result = false;
            if (Csla.ApplicationContext.User.IsInRole("NhomNguoiDung:U")
                || Csla.ApplicationContext.User.Identity.Name.ToUpper() == "SYSMAN")
                result = true;
            return result;
        }

        public static bool CanDeleteObject()
        {
            bool result = false;
            if (Csla.ApplicationContext.User.IsInRole("NhomNguoiDung:D")
                || Csla.ApplicationContext.User.Identity.Name.ToUpper() == "SYSMAN")
                result = true;
            return result;
        }
        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Loads a <see cref="ADM_NhomNguoiDung_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        /// <returns>A reference to the fetched <see cref="ADM_NhomNguoiDung_Info"/> object.</returns>
        internal static ADM_NhomNguoiDung_Info GetADM_NhomNguoiDung_Info(SafeDataReader dr)
        {
            if (!CanGetObject())
                throw new System.Security.SecurityException("Bạn không có quyền xem NhomNguoiDung");
            ADM_NhomNguoiDung_Info obj = new ADM_NhomNguoiDung_Info();
            obj.Fetch(dr);
            return obj;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="ADM_NhomNguoiDung_Info"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        public ADM_NhomNguoiDung_Info()
        {
            // Prevent direct creation
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="ADM_NhomNguoiDung_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            ID =  dr.GetInt64("ID");
            TenNhom = dr.GetString("TenNhom");
            MoTa = dr.GetString("MoTa");
            HoatDong =dr.GetBoolean("HoatDong");
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        #endregion

    }
}
