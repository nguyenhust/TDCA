//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    HOC_VIEN_TT_INFO
// ObjectType:  HOC_VIEN_TT_INFO
// CSLAType:    EditableChild

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;
using NETLINK.LIB;
namespace oldSoft
{

    /// <summary>
    /// HOC_VIEN_TT_INFO (editable child object).<br/>
    /// This is a generated base class of <see cref="HOC_VIEN_TT_INFO"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is an item of <see cref="HOC_VIEN_TT_COLL"/> collection.
    /// </remarks>
    [Serializable]
    public partial class HOC_VIEN_TT_INFO : BusinessBase<HOC_VIEN_TT_INFO>
    {

        #region Business Properties

        /// <summary>
        /// Maintains metadata about <see cref="LOP_DK_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> LOP_DK_IDProperty = RegisterProperty<string>(p => p.LOP_DK_ID, "LOP DK ID", null);
        /// <summary>
        /// CDT.HV_DAOTAO.LOP_DK_ID
        /// </summary>
        /// <value>The LOP DK ID.</value>
        public string LOP_DK_ID
        {
            get { return GetProperty(LOP_DK_IDProperty); }
            set { SetProperty(LOP_DK_IDProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="LOP_DK_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> LOP_HOC_IDProperty = RegisterProperty<string>(p => p.LOP_HOC_ID, "LOP DK ID", null);
        /// <summary>
        /// CDT.HV_DAOTAO.LOP_DK_ID
        /// </summary>
        /// <value>The LOP DK ID.</value>
        public string LOP_HOC_ID
        {
            get { return GetProperty(LOP_HOC_IDProperty); }
            set { SetProperty(LOP_HOC_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="CK_DK_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> CK_DK_IDProperty = RegisterProperty<string>(p => p.CK_DK_ID, "CK DK ID", null);
        /// <summary>
        /// CDT.HV_DAOTAO.CK_DK_ID
        /// </summary>
        /// <value>The CK DK ID.</value>
        public string CK_DK_ID
        {
            get { return GetProperty(CK_DK_IDProperty); }
            set { SetProperty(CK_DK_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TEN_LOP"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TEN_LOPProperty = RegisterProperty<string>(p => p.TEN_LOP, "TEN LOP", null);
        /// <summary>
        /// CDT.HV_DAOTAO.TEN_LOP
        /// </summary>
        /// <value>The TEN LOP.</value>
        public string TEN_LOP
        {
            get { return GetProperty(TEN_LOPProperty); }
            set { SetProperty(TEN_LOPProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TEN_HV"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TEN_HVProperty = RegisterProperty<string>(p => p.TEN_HV, "TEN HV", null);
        /// <summary>
        /// CDT.HV_DAOTAO.TEN_HV
        /// </summary>
        /// <value>The TEN HV.</value>
        public string TEN_HV
        {
            get { return GetProperty(TEN_HVProperty); }
            set { SetProperty(TEN_HVProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="UU_TIEN"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> UU_TIENProperty = RegisterProperty<string>(p => p.UU_TIEN, "UU TIEN", null);
        /// <summary>
        /// CDT.HV_DAOTAO.UU_TIEN
        /// </summary>
        /// <value>The UU TIEN.</value>
        public string UU_TIEN
        {
            get { return GetProperty(UU_TIENProperty); }
            set { SetProperty(UU_TIENProperty, value); }
        }

      

        /// <summary>
        /// Maintains metadata about <see cref="MA_HOC_VIEN"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_HOC_VIENProperty = RegisterProperty<string>(p => p.MA_HOC_VIEN, "MA HOC VIEN", null);
        /// <summary>
        /// CDT.HV_DAOTAO.MA_HOC_VIEN
        /// </summary>
        /// <value>The MA HOC VIEN.</value>
        public string MA_HOC_VIEN
        {
            get { return GetProperty(MA_HOC_VIENProperty); }
            set { SetProperty(MA_HOC_VIENProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="HOC_VIEN_TT_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int> HOC_VIEN_TT_IDProperty = RegisterProperty<int>(p => p.HOC_VIEN_TT_ID, "HOC VIEN TT ID");
        /// <summary>
        /// CDT.HOC_VIEN_TT.HOC_VIEN_TT_ID
        /// </summary>
        /// <value>The HOC VIEN TT ID.</value>
        public int HOC_VIEN_TT_ID
        {
            get { return GetProperty(HOC_VIEN_TT_IDProperty); }
            set { SetProperty(HOC_VIEN_TT_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TEN_HOCVIEN"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TEN_HOCVIENProperty = RegisterProperty<string>(p => p.TEN_HOCVIEN, "TEN HOCVIEN");
        /// <summary>
        /// CDT.HOC_VIEN_TT.TEN_HOCVIEN
        /// </summary>
        /// <value>The TEN HOCVIEN.</value>
        public string TEN_HOCVIEN
        {
            get { return GetProperty(TEN_HOCVIENProperty); }
            set { SetProperty(TEN_HOCVIENProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NGAY_SINH"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> NGAY_SINHProperty = RegisterProperty<Object>(p => p.NGAY_SINH, "NGAY SINH");
        /// <summary>
        /// CDT.HOC_VIEN_TT.NGAY_SINH
        /// </summary>
        /// <value>The NGAY SINH.</value>
        public Object NGAY_SINH
        {
            get { return GetProperty(NGAY_SINHProperty); }
            set { SetProperty(NGAY_SINHProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="BANG_TN"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> BANG_TNProperty = RegisterProperty<string>(p => p.BANG_TN, "BANG TN", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.BANG_TN
        /// </summary>
        /// <value>The BANG TN.</value>
        public string BANG_TN
        {
            get { return GetProperty(BANG_TNProperty); }
            set { SetProperty(BANG_TNProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TRUONG_TN_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> TRUONG_TN_IDProperty = RegisterProperty<int?>(p => p.TRUONG_TN_ID, "TRUONG TN ID", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.TRUONG_TN_ID
        /// </summary>
        /// <value>The TRUONG TN ID.</value>
        public int? TRUONG_TN_ID
        {
            get { return GetProperty(TRUONG_TN_IDProperty); }
            set { SetProperty(TRUONG_TN_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NAM_TN"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> NAM_TNProperty = RegisterProperty<int?>(p => p.NAM_TN, "NAM TN", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.NAM_TN
        /// </summary>
        /// <value>The NAM TN.</value>
        public int? NAM_TN
        {
            get { return GetProperty(NAM_TNProperty); }
            set { SetProperty(NAM_TNProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_TRINHDO"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_TRINHDOProperty = RegisterProperty<string>(p => p.MA_TRINHDO, "MA TRINHDO", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_TRINHDO
        /// </summary>
        /// <value>The MA TRINHDO.</value>
        public string MA_TRINHDO
        {
            get { return GetProperty(MA_TRINHDOProperty); }
            set { SetProperty(MA_TRINHDOProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_CHUYENNGANH_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> MA_CHUYENNGANH_IDProperty = RegisterProperty<int?>(p => p.MA_CHUYENNGANH_ID, "MA CHUYENNGANH ID", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_CHUYENNGANH_ID
        /// </summary>
        /// <value>The MA CHUYENNGANH ID.</value>
        public int? MA_CHUYENNGANH_ID
        {
            get { return GetProperty(MA_CHUYENNGANH_IDProperty); }
            set { SetProperty(MA_CHUYENNGANH_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="THAM_NIEN"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> THAM_NIENProperty = RegisterProperty<int?>(p => p.THAM_NIEN, "THAM NIEN", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.THAM_NIEN
        /// </summary>
        /// <value>The THAM NIEN.</value>
        public int? THAM_NIEN
        {
            get { return GetProperty(THAM_NIENProperty); }
            set { SetProperty(THAM_NIENProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_CHUCVU"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_CHUCVUProperty = RegisterProperty<string>(p => p.MA_CHUCVU, "MA CHUCVU", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_CHUCVU
        /// </summary>
        /// <value>The MA CHUCVU.</value>
        public string MA_CHUCVU
        {
            get { return GetProperty(MA_CHUCVUProperty); }
            set { SetProperty(MA_CHUCVUProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DIA_CHI_CQ"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> DIA_CHI_CQProperty = RegisterProperty<string>(p => p.DIA_CHI_CQ, "DIA CHI CQ", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DIA_CHI_CQ
        /// </summary>
        /// <value>The DIA CHI CQ.</value>
        public string DIA_CHI_CQ
        {
            get { return GetProperty(DIA_CHI_CQProperty); }
            set { SetProperty(DIA_CHI_CQProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="CQ_GUI_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> CQ_GUI_IDProperty = RegisterProperty<int?>(p => p.CQ_GUI_ID, "CQ GUI ID", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.CQ_GUI_ID
        /// </summary>
        /// <value>The CQ GUI ID.</value>
        public int? CQ_GUI_ID
        {
            get { return GetProperty(CQ_GUI_IDProperty); }
            set { SetProperty(CQ_GUI_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_TPHO"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TenTruongTotNghiepProperty = RegisterProperty<string>(p => p.TenTruongTotNghiep, "MA TPHO", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_TPHO
        /// </summary>
        /// <value>The MA TPHO.</value>
        public string TenTruongTotNghiep
        {
            get { return GetProperty(TenTruongTotNghiepProperty); }
            set { SetProperty(TenTruongTotNghiepProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="MA_TPHO"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_TPHOProperty = RegisterProperty<string>(p => p.MA_TPHO, "MA TPHO", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_TPHO
        /// </summary>
        /// <value>The MA TPHO.</value>
        public string MA_TPHO
        {
            get { return GetProperty(MA_TPHOProperty); }
            set { SetProperty(MA_TPHOProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DIEN_THOAI_NR"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> DIEN_THOAI_NRProperty = RegisterProperty<string>(p => p.DIEN_THOAI_NR, "DIEN THOAI NR", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DIEN_THOAI_NR
        /// </summary>
        /// <value>The DIEN THOAI NR.</value>
        public string DIEN_THOAI_NR
        {
            get { return GetProperty(DIEN_THOAI_NRProperty); }
            set { SetProperty(DIEN_THOAI_NRProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DIEN_THOAI_CQ"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> DIEN_THOAI_CQProperty = RegisterProperty<string>(p => p.DIEN_THOAI_CQ, "DIEN THOAI CQ", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DIEN_THOAI_CQ
        /// </summary>
        /// <value>The DIEN THOAI CQ.</value>
        public string DIEN_THOAI_CQ
        {
            get { return GetProperty(DIEN_THOAI_CQProperty); }
            set { SetProperty(DIEN_THOAI_CQProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NGAY_CAP_CN"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> NGAY_CAP_CNProperty = RegisterProperty<Object>(p => p.NGAY_CAP_CN, "NGAY CAP CN");
        /// <summary>
        /// CDT.HOC_VIEN_TT.NGAY_CAP_CN
        /// </summary>
        /// <value>The NGAY CAP CN.</value>
        public Object NGAY_CAP_CN
        {
            get { return GetProperty(NGAY_CAP_CNProperty); }
            set { SetProperty(NGAY_CAP_CNProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DV_CAP_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> DV_CAP_IDProperty = RegisterProperty<int?>(p => p.DV_CAP_ID, "DV CAP ID", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DV_CAP_ID
        /// </summary>
        /// <value>The DV CAP ID.</value>
        public int? DV_CAP_ID
        {
            get { return GetProperty(DV_CAP_IDProperty); }
            set { SetProperty(DV_CAP_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TRANG_THAI"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> TRANG_THAIProperty = RegisterProperty<string>(p => p.TRANG_THAI, "TRANG THAI", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.TRANG_THAI
        /// </summary>
        /// <value>The TRANG THAI.</value>
        public string TRANG_THAI
        {
            get { return GetProperty(TRANG_THAIProperty); }
            set { SetProperty(TRANG_THAIProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_HV"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_HVProperty = RegisterProperty<string>(p => p.MA_HV, "MA HV", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_HV
        /// </summary>
        /// <value>The MA HV.</value>
        public string MA_HV
        {
            get { return GetProperty(MA_HVProperty); }
            set { SetProperty(MA_HVProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="GIOI_TINH"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> GIOI_TINHProperty = RegisterProperty<string>(p => p.GIOI_TINH, "GIOI TINH", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.GIOI_TINH
        /// </summary>
        /// <value>The GIOI TINH.</value>
        public string GIOI_TINH
        {
            get { return GetProperty(GIOI_TINHProperty); }
            set { SetProperty(GIOI_TINHProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="GIOI_TINH"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> NOI_DUNG_DTProperty = RegisterProperty<string>(p => p.NOI_DUNG_DT, "GIOI TINH", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.GIOI_TINH
        /// </summary>
        /// <value>The GIOI TINH.</value>
        public string NOI_DUNG_DT
        {
            get { return GetProperty(NOI_DUNG_DTProperty); }
            set { SetProperty(NOI_DUNG_DTProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="SO_CMT"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> SO_CMTProperty = RegisterProperty<string>(p => p.SO_CMT, "SO CMT", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.SO_CMT
        /// </summary>
        /// <value>The SO CMT.</value>
        public string SO_CMT
        {
            get { return GetProperty(SO_CMTProperty); }
            set { SetProperty(SO_CMTProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="TU_NGAY"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> TU_NGAYProperty = RegisterProperty<Object>(p => p.TU_NGAY, "TU NGAY");
        /// <summary>
        /// CDT.HOC_VIEN_TT.TU_NGAY
        /// </summary>
        /// <value>The TU NGAY.</value>
        public Object TU_NGAY
        {
            get { return GetProperty(TU_NGAYProperty); }
            set { SetProperty(TU_NGAYProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="MA_TRUONG"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> MA_TRUONGProperty = RegisterProperty<string>(p => p.MA_TRUONG, "MA TRUONG", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.MA_TRUONG
        /// </summary>
        /// <value>The MA TRUONG.</value>
        public string MA_TRUONG
        {
            get { return GetProperty(MA_TRUONGProperty); }
            set { SetProperty(MA_TRUONGProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NOI_CTAC"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> NOI_CTACProperty = RegisterProperty<string>(p => p.NOI_CTAC, "NOI CTAC", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.NOI_CTAC
        /// </summary>
        /// <value>The NOI CTAC.</value>
        public string NOI_CTAC
        {
            get { return GetProperty(NOI_CTACProperty); }
            set { SetProperty(NOI_CTACProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NOI_CTAC_BVIEN_ID"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> NOI_CTAC_BVIEN_IDProperty = RegisterProperty<int?>(p => p.NOI_CTAC_BVIEN_ID, "NOI CTAC BVIEN ID", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.NOI_CTAC_BVIEN_ID
        /// </summary>
        /// <value>The NOI CTAC BVIEN ID.</value>
        public int? NOI_CTAC_BVIEN_ID
        {
            get { return GetProperty(NOI_CTAC_BVIEN_IDProperty); }
            set { SetProperty(NOI_CTAC_BVIEN_IDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DIEN_THOAI_DD"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> DIEN_THOAI_DDProperty = RegisterProperty<string>(p => p.DIEN_THOAI_DD, "DIEN THOAI DD", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DIEN_THOAI_DD
        /// </summary>
        /// <value>The DIEN THOAI DD.</value>
        public string DIEN_THOAI_DD
        {
            get { return GetProperty(DIEN_THOAI_DDProperty); }
            set { SetProperty(DIEN_THOAI_DDProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="SO_BANG_TN"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> SO_BANG_TNProperty = RegisterProperty<string>(p => p.SO_BANG_TN, "SO BANG TN", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.SO_BANG_TN
        /// </summary>
        /// <value>The SO BANG TN.</value>
        public string SO_BANG_TN
        {
            get { return GetProperty(SO_BANG_TNProperty); }
            set { SetProperty(SO_BANG_TNProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NOI_CTAC_KHOA"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> NOI_CTAC_KHOAProperty = RegisterProperty<string>(p => p.NOI_CTAC_KHOA, "NOI CTAC KHOA", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.NOI_CTAC_KHOA
        /// </summary>
        /// <value>The NOI CTAC KHOA.</value>
        public string NOI_CTAC_KHOA
        {
            get { return GetProperty(NOI_CTAC_KHOAProperty); }
            set { SetProperty(NOI_CTAC_KHOAProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DIA_CHI_NR"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> DIA_CHI_NRProperty = RegisterProperty<string>(p => p.DIA_CHI_NR, "DIA CHI NR", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.DIA_CHI_NR
        /// </summary>
        /// <value>The DIA CHI NR.</value>
        public string DIA_CHI_NR
        {
            get { return GetProperty(DIA_CHI_NRProperty); }
            set { SetProperty(DIA_CHI_NRProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="DEN_NGAY"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> DEN_NGAYProperty = RegisterProperty<Object>(p => p.DEN_NGAY, "DEN NGAY");
        /// <summary>
        /// CDT.HOC_VIEN_TT.DEN_NGAY
        /// </summary>
        /// <value>The DEN NGAY.</value>
        public Object DEN_NGAY
        {
            get { return GetProperty(DEN_NGAYProperty); }
            set { SetProperty(DEN_NGAYProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NGAY_DKY"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> NGAY_DKYProperty = RegisterProperty<Object>(p => p.NGAY_DKY, "NGAY DKY");
        /// <summary>
        /// CDT.HOC_VIEN_TT.NGAY_DKY
        /// </summary>
        /// <value>The NGAY DKY.</value>
        public Object NGAY_DKY
        {
            get { return GetProperty(NGAY_DKYProperty); }
            set { SetProperty(NGAY_DKYProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="NAM"/> property.
        /// </summary>
        public static readonly PropertyInfo<int?> NAMProperty = RegisterProperty<int?>(p => p.NAM, "NAM", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.NAM
        /// </summary>
        /// <value>The NAM.</value>
        public int? NAM
        {
            get { return GetProperty(NAMProperty); }
            set { SetProperty(NAMProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="CREATE_DATE"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> CREATE_DATEProperty = RegisterProperty<Object>(p => p.CREATE_DATE, "CREATE DATE");
        /// <summary>
        /// CDT.HOC_VIEN_TT.CREATE_DATE
        /// </summary>
        /// <value>The CREATE DATE.</value>
        public Object CREATE_DATE
        {
            get { return GetProperty(CREATE_DATEProperty); }
            set { SetProperty(CREATE_DATEProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="CREATE_DATE"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> NGAY_BDAUProperty = RegisterProperty<Object>(p => p.NGAY_BDAU, "CREATE DATE");
        /// <summary>
        /// CDT.HOC_VIEN_TT.CREATE_DATE
        /// </summary>
        /// <value>The CREATE DATE.</value>
        public Object NGAY_BDAU
        {
            get { return GetProperty(NGAY_BDAUProperty); }
            set { SetProperty(NGAY_BDAUProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="CREATE_DATE"/> property.
        /// </summary>
        public static readonly PropertyInfo<Object> NGAY_KTHUCProperty = RegisterProperty<Object>(p => p.NGAY_KTHUC, "CREATE DATE");
        /// <summary>
        /// CDT.HOC_VIEN_TT.CREATE_DATE
        /// </summary>
        /// <value>The CREATE DATE.</value>
        public Object NGAY_KTHUC
        {
            get { return GetProperty(NGAY_KTHUCProperty); }
            set { SetProperty(NGAY_KTHUCProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="USER_CREATE"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> USER_CREATEProperty = RegisterProperty<string>(p => p.USER_CREATE, "USER CREATE", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.USER_CREATE
        /// </summary>
        /// <value>The USER CREATE.</value>
        public string USER_CREATE
        {
            get { return GetProperty(USER_CREATEProperty); }
            set { SetProperty(USER_CREATEProperty, value); }
        }
        /// <summary>
        /// Maintains metadata about <see cref="USER_CREATE"/> property.
        /// </summary>
        public static readonly PropertyInfo<string> HINH_THUCProperty = RegisterProperty<string>(p => p.HINH_THUC, "USER CREATE", null);
        /// <summary>
        /// CDT.HOC_VIEN_TT.USER_CREATE
        /// </summary>
        /// <value>The USER CREATE.</value>
        public string HINH_THUC
        {
            get { return GetProperty(HINH_THUCProperty); }
            set { SetProperty(HINH_THUCProperty, value); }
        }

        /// <summary>
        /// Maintains metadata about <see cref="ANH"/> property.
        /// </summary>
        public static readonly PropertyInfo<byte[]> ANHProperty = RegisterProperty<byte[]>(p => p.ANH, "ANH");
        /// <summary>
        /// CDT.HOC_VIEN_TT.ANH
        /// </summary>
        /// <value>The ANH.</value>
        public byte[] ANH
        {
            get { return GetProperty(ANHProperty); }
            set { SetProperty(ANHProperty, value); }
        }

        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Loads a <see cref="HOC_VIEN_TT_INFO"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        /// <returns>A reference to the fetched <see cref="HOC_VIEN_TT_INFO"/> object.</returns>
        internal static HOC_VIEN_TT_INFO GetHOC_VIEN_TT_INFO(SafeDataReader dr)
        {
            HOC_VIEN_TT_INFO obj = new HOC_VIEN_TT_INFO();
            // show the framework that this is a child object
            obj.MarkAsChild();
            obj.Fetch(dr);
            obj.MarkOld();
            // check all object rules and property rules
            obj.BusinessRules.CheckRules();
            return obj;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="HOC_VIEN_TT_INFO"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        private HOC_VIEN_TT_INFO()
        {
            // Prevent direct creation

            // show the framework that this is a child object
            MarkAsChild();
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="HOC_VIEN_TT_INFO"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            LoadProperty(HOC_VIEN_TT_IDProperty, dr.GetInt32("HOC_VIEN_TT_ID"));
            LoadProperty(TEN_HOCVIENProperty, dr.GetString("TEN_HOCVIEN"));
            LoadProperty(NGAY_SINHProperty, dr.GetDateTime("NGAY_SINH"));
            LoadProperty(NAM_TNProperty, dr.GetInt32("NAM_TN"));
            LoadProperty(MA_TRINHDOProperty, dr.GetString("MA_TRINHDO"));
            LoadProperty(MA_CHUYENNGANH_IDProperty, dr.GetInt32("MA_CHUYENNGANH_ID"));
            LoadProperty(MA_TPHOProperty, dr.GetString("MA_TPHO"));
            LoadProperty(GIOI_TINHProperty, dr.GetString("GIOI_TINH"));
            LoadProperty(SO_CMTProperty, dr.GetString("SO_CMT"));
            LoadProperty(NOI_CTACProperty, dr.GetString("NOI_CTAC"));
            LoadProperty(DIEN_THOAI_DDProperty, dr.GetString("DIEN_THOAI_DD"));
            LoadProperty(SO_BANG_TNProperty, dr.GetString("SO_BANG_TN"));
            LoadProperty(CREATE_DATEProperty, dr.GetDateTime("CREATE_DATE"));
            LoadProperty(USER_CREATEProperty, dr.GetString("USER_CREATE"));
            LoadProperty(LOP_DK_IDProperty, dr.GetString("LOP_DK_ID"));
            LoadProperty(LOP_HOC_IDProperty, dr.GetString("LOP_HOC_ID"));
            LoadProperty(CK_DK_IDProperty, dr.GetString("CK_DK_ID"));
            LoadProperty(TEN_LOPProperty, dr.GetString("TEN_LOP"));
            LoadProperty(MA_HOC_VIENProperty, dr.GetString("MA_HOC_VIEN"));
            LoadProperty(HINH_THUCProperty, dr.GetString("HINH_THUC"));
            LoadProperty(NGAY_BDAUProperty,dr.GetDateTime("NGAY_BDAU"));
            LoadProperty(NGAY_KTHUCProperty,dr.GetDateTime("NGAY_KTHUC"));
            LoadProperty(TenTruongTotNghiepProperty, dr.GetString("TenTruongTotNghiep"));
            LoadProperty(NOI_DUNG_DTProperty, dr.GetString("NOI_DUNG_DT"));
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        /// <summary>
        /// Inserts a new <see cref="HOC_VIEN_TT_INFO"/> object in the database.
        /// </summary>
        private void Child_Insert()
        {
            using (var ctx = TransactionManager<SqlConnection, SqlTransaction>.GetManager("Connection2"))
            {
                using (var cmd = new SqlCommand("dbo.HOC_VIEN_TT_INFO_add", ctx.Connection))
                {
                    cmd.Transaction = ctx.Transaction;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@HOC_VIEN_TT_ID", ReadProperty(HOC_VIEN_TT_IDProperty)).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@TEN_HOCVIEN", ReadProperty(TEN_HOCVIENProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NGAY_SINH", ReadProperty(NGAY_SINHProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@BANG_TN", ReadProperty(BANG_TNProperty) == null ? (object)DBNull.Value : ReadProperty(BANG_TNProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@TRUONG_TN_ID", ReadProperty(TRUONG_TN_IDProperty) == null ? (object)DBNull.Value : ReadProperty(TRUONG_TN_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@NAM_TN", ReadProperty(NAM_TNProperty) == null ? (object)DBNull.Value : ReadProperty(NAM_TNProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_TRINHDO", ReadProperty(MA_TRINHDOProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TRINHDOProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@MA_CHUYENNGANH_ID", ReadProperty(MA_CHUYENNGANH_IDProperty) == null ? (object)DBNull.Value : ReadProperty(MA_CHUYENNGANH_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@THAM_NIEN", ReadProperty(THAM_NIENProperty) == null ? (object)DBNull.Value : ReadProperty(THAM_NIENProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_CHUCVU", ReadProperty(MA_CHUCVUProperty) == null ? (object)DBNull.Value : ReadProperty(MA_CHUCVUProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIA_CHI_CQ", ReadProperty(DIA_CHI_CQProperty) == null ? (object)DBNull.Value : ReadProperty(DIA_CHI_CQProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@CQ_GUI_ID", ReadProperty(CQ_GUI_IDProperty) == null ? (object)DBNull.Value : ReadProperty(CQ_GUI_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_TPHO", ReadProperty(MA_TPHOProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TPHOProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_NR", ReadProperty(DIEN_THOAI_NRProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_NRProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_CQ", ReadProperty(DIEN_THOAI_CQProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_CQProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NGAY_CAP_CN", ReadProperty(NGAY_CAP_CNProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@DV_CAP_ID", ReadProperty(DV_CAP_IDProperty) == null ? (object)DBNull.Value : ReadProperty(DV_CAP_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@TRANG_THAI", ReadProperty(TRANG_THAIProperty) == null ? (object)DBNull.Value : ReadProperty(TRANG_THAIProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@MA_HV", ReadProperty(MA_HVProperty) == null ? (object)DBNull.Value : ReadProperty(MA_HVProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@GIOI_TINH", ReadProperty(GIOI_TINHProperty) == null ? (object)DBNull.Value : ReadProperty(GIOI_TINHProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@SO_CMT", ReadProperty(SO_CMTProperty) == null ? (object)DBNull.Value : ReadProperty(SO_CMTProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@TU_NGAY", ReadProperty(TU_NGAYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@MA_TRUONG", ReadProperty(MA_TRUONGProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TRUONGProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC", ReadProperty(NOI_CTACProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTACProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC_BVIEN_ID", ReadProperty(NOI_CTAC_BVIEN_IDProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTAC_BVIEN_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_DD", ReadProperty(DIEN_THOAI_DDProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_DDProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@SO_BANG_TN", ReadProperty(SO_BANG_TNProperty) == null ? (object)DBNull.Value : ReadProperty(SO_BANG_TNProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC_KHOA", ReadProperty(NOI_CTAC_KHOAProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTAC_KHOAProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIA_CHI_NR", ReadProperty(DIA_CHI_NRProperty) == null ? (object)DBNull.Value : ReadProperty(DIA_CHI_NRProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DEN_NGAY", ReadProperty(DEN_NGAYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@NGAY_DKY", ReadProperty(NGAY_DKYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@NAM", ReadProperty(NAMProperty) == null ? (object)DBNull.Value : ReadProperty(NAMProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@CREATE_DATE", ReadProperty(CREATE_DATEProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@USER_CREATE", ReadProperty(USER_CREATEProperty) == null ? (object)DBNull.Value : ReadProperty(USER_CREATEProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@ANH", ReadProperty(ANHProperty)).DbType = DbType.Binary;
                    var args = new DataPortalHookArgs(cmd);
                    OnInsertPre(args);
                    cmd.ExecuteNonQuery();
                    OnInsertPost(args);
                }
            }
        }

        /// <summary>
        /// Updates in the database all changes made to the <see cref="HOC_VIEN_TT_INFO"/> object.
        /// </summary>
        private void Child_Update()
        {
            if (!IsDirty)
                return;

            using (var ctx = TransactionManager<SqlConnection, SqlTransaction>.GetManager("Connection2"))
            {
                using (var cmd = new SqlCommand("dbo.HOC_VIEN_TT_INFO_update", ctx.Connection))
                {
                    cmd.Transaction = ctx.Transaction;
                    cmd.CommandType = CommandType.StoredProcedure;
                    cmd.Parameters.AddWithValue("@HOC_VIEN_TT_ID", ReadProperty(HOC_VIEN_TT_IDProperty)).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@TEN_HOCVIEN", ReadProperty(TEN_HOCVIENProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NGAY_SINH", ReadProperty(NGAY_SINHProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@BANG_TN", ReadProperty(BANG_TNProperty) == null ? (object)DBNull.Value : ReadProperty(BANG_TNProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@TRUONG_TN_ID", ReadProperty(TRUONG_TN_IDProperty) == null ? (object)DBNull.Value : ReadProperty(TRUONG_TN_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@NAM_TN", ReadProperty(NAM_TNProperty) == null ? (object)DBNull.Value : ReadProperty(NAM_TNProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_TRINHDO", ReadProperty(MA_TRINHDOProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TRINHDOProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@MA_CHUYENNGANH_ID", ReadProperty(MA_CHUYENNGANH_IDProperty) == null ? (object)DBNull.Value : ReadProperty(MA_CHUYENNGANH_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@THAM_NIEN", ReadProperty(THAM_NIENProperty) == null ? (object)DBNull.Value : ReadProperty(THAM_NIENProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_CHUCVU", ReadProperty(MA_CHUCVUProperty) == null ? (object)DBNull.Value : ReadProperty(MA_CHUCVUProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIA_CHI_CQ", ReadProperty(DIA_CHI_CQProperty) == null ? (object)DBNull.Value : ReadProperty(DIA_CHI_CQProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@CQ_GUI_ID", ReadProperty(CQ_GUI_IDProperty) == null ? (object)DBNull.Value : ReadProperty(CQ_GUI_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@MA_TPHO", ReadProperty(MA_TPHOProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TPHOProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_NR", ReadProperty(DIEN_THOAI_NRProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_NRProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_CQ", ReadProperty(DIEN_THOAI_CQProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_CQProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NGAY_CAP_CN", ReadProperty(NGAY_CAP_CNProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@DV_CAP_ID", ReadProperty(DV_CAP_IDProperty) == null ? (object)DBNull.Value : ReadProperty(DV_CAP_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@TRANG_THAI", ReadProperty(TRANG_THAIProperty) == null ? (object)DBNull.Value : ReadProperty(TRANG_THAIProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@MA_HV", ReadProperty(MA_HVProperty) == null ? (object)DBNull.Value : ReadProperty(MA_HVProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@GIOI_TINH", ReadProperty(GIOI_TINHProperty) == null ? (object)DBNull.Value : ReadProperty(GIOI_TINHProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@SO_CMT", ReadProperty(SO_CMTProperty) == null ? (object)DBNull.Value : ReadProperty(SO_CMTProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@TU_NGAY", ReadProperty(TU_NGAYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@MA_TRUONG", ReadProperty(MA_TRUONGProperty) == null ? (object)DBNull.Value : ReadProperty(MA_TRUONGProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC", ReadProperty(NOI_CTACProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTACProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC_BVIEN_ID", ReadProperty(NOI_CTAC_BVIEN_IDProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTAC_BVIEN_IDProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@DIEN_THOAI_DD", ReadProperty(DIEN_THOAI_DDProperty) == null ? (object)DBNull.Value : ReadProperty(DIEN_THOAI_DDProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@SO_BANG_TN", ReadProperty(SO_BANG_TNProperty) == null ? (object)DBNull.Value : ReadProperty(SO_BANG_TNProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@NOI_CTAC_KHOA", ReadProperty(NOI_CTAC_KHOAProperty) == null ? (object)DBNull.Value : ReadProperty(NOI_CTAC_KHOAProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DIA_CHI_NR", ReadProperty(DIA_CHI_NRProperty) == null ? (object)DBNull.Value : ReadProperty(DIA_CHI_NRProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@DEN_NGAY", ReadProperty(DEN_NGAYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@NGAY_DKY", ReadProperty(NGAY_DKYProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@NAM", ReadProperty(NAMProperty) == null ? (object)DBNull.Value : ReadProperty(NAMProperty).Value).DbType = DbType.Int32;
                    cmd.Parameters.AddWithValue("@CREATE_DATE", ReadProperty(CREATE_DATEProperty)).DbType = DbType.Binary;
                    cmd.Parameters.AddWithValue("@USER_CREATE", ReadProperty(USER_CREATEProperty) == null ? (object)DBNull.Value : ReadProperty(USER_CREATEProperty)).DbType = DbType.String;
                    cmd.Parameters.AddWithValue("@ANH", ReadProperty(ANHProperty)).DbType = DbType.Binary;
                    var args = new DataPortalHookArgs(cmd);
                    OnUpdatePre(args);
                    cmd.ExecuteNonQuery();
                    OnUpdatePost(args);
                }
            }
        }

        /// <summary>
        /// Self deletes the <see cref="HOC_VIEN_TT_INFO"/> object from database.
        /// </summary>
        private void Child_DeleteSelf()
        {
            using (var ctx = TransactionManager<SqlConnection, SqlTransaction>.GetManager("Connection2"))
            {
                using (var cmd = new SqlCommand("dbo.HOC_VIEN_TT_INFO_delete", ctx.Connection))
                {
                    cmd.Transaction = ctx.Transaction;
                    cmd.CommandType = CommandType.StoredProcedure;
                    var args = new DataPortalHookArgs(cmd);
                    OnDeletePre(args);
                    cmd.ExecuteNonQuery();
                    OnDeletePost(args);
                }
            }
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs in DataPortal_Delete, after setting query parameters and before the delete operation.
        /// </summary>
        partial void OnDeletePre(DataPortalHookArgs args);

        /// <summary>
        /// Occurs in DataPortal_Delete, after the delete operation, before Commit().
        /// </summary>
        partial void OnDeletePost(DataPortalHookArgs args);

        /// <summary>
        /// Occurs after setting query parameters and before the fetch operation.
        /// </summary>
        partial void OnFetchPre(DataPortalHookArgs args);

        /// <summary>
        /// Occurs after the fetch operation (object or collection is fully loaded and set up).
        /// </summary>
        partial void OnFetchPost(DataPortalHookArgs args);

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        /// <summary>
        /// Occurs after setting query parameters and before the update operation.
        /// </summary>
        partial void OnUpdatePre(DataPortalHookArgs args);

        /// <summary>
        /// Occurs in DataPortal_Insert, after the update operation, before setting back row identifiers (RowVersion) and Commit().
        /// </summary>
        partial void OnUpdatePost(DataPortalHookArgs args);

        /// <summary>
        /// Occurs in DataPortal_Insert, after setting query parameters and before the insert operation.
        /// </summary>
        partial void OnInsertPre(DataPortalHookArgs args);

        /// <summary>
        /// Occurs in DataPortal_Insert, after the insert operation, before setting back row identifiers (ID and RowVersion) and Commit().
        /// </summary>
        partial void OnInsertPost(DataPortalHookArgs args);

        #endregion

    }
}
