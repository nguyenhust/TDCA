//  This file was generated by CSLA Object Generator - CslaGenFork v4.3.0
//
// Filename:    DIC_CanBo_Info
// ObjectType:  DIC_CanBo_Info
// CSLAType:    ReadOnlyObject

using System;
using System.Data;
using System.Data.SqlClient;
using Csla;
using Csla.Data;

namespace Dictionary
{

    /// <summary>
    /// DIC_CanBo_Info (read only object).<br/>
    /// This is a generated base class of <see cref="DIC_CanBo_Info"/> business object.
    /// </summary>
    /// <remarks>
    /// This class is an item of <see cref="DIC_CanBo_Coll"/> collection.
    /// </remarks>
    [Serializable]
    public partial class DIC_CanBo_Info : ReadOnlyBase<DIC_CanBo_Info>
    {

        #region Business Properties

        /// <summary>
        /// Gets the ID.
        /// </summary>
        /// <value>The ID.</value>
        public Int64 ID { get; private set; }

        /// <summary>
        /// Gets the Ho Ten.
        /// </summary>
        /// <value>The Ho Ten.</value>
        public string HoTen { get; private set; }

        /// <summary>
        /// Gets the IDGioi Tinh.
        /// </summary>
        /// <value>The IDGioi Tinh.</value>
        public int IDGioiTinh { get; private set; }

        /// <summary>
        /// Maintains metadata about <see cref="NgaySinh"/> property.
        /// </summary>
        public static readonly PropertyInfo<SmartDate> NgaySinhProperty = RegisterProperty<SmartDate>(p => p.NgaySinh, "Ngay Sinh");
        /// <summary>
        /// Gets the Ngay Sinh.
        /// </summary>
        /// <value>The Ngay Sinh.</value>
        public string NgaySinh
        {
            get { return GetPropertyConvert<SmartDate, String>(NgaySinhProperty); }
        }

        /// <summary>
        /// Gets the IDTinh.
        /// </summary>
        /// <value>The IDTinh.</value>
        public Int64 IDTinh { get; private set; }

        /// <summary>
        /// Gets the Cho OHiennay.
        /// </summary>
        /// <value>The Cho OHiennay.</value>
        public string ChoOHiennay { get; private set; }

        /// <summary>
        /// Gets the IDQuoc Gia.
        /// </summary>
        /// <value>The IDQuoc Gia.</value>
        public int? IDQuocGia { get; private set; }

        /// <summary>
        /// Maintains metadata about <see cref="NgayVaoDang"/> property.
        /// </summary>
        public static readonly PropertyInfo<SmartDate> NgayVaoDangProperty = RegisterProperty<SmartDate>(p => p.NgayVaoDang, "Ngay Vao Dang", null);
        /// <summary>
        /// Gets the Ngay Vao Dang.
        /// </summary>
        /// <value>The Ngay Vao Dang.</value>
        public string NgayVaoDang
        {
            get { return GetPropertyConvert<SmartDate, String>(NgayVaoDangProperty); }
        }

        /// <summary>
        /// Gets the Trinh Do CM.
        /// </summary>
        /// <value>The Trinh Do CM.</value>
        public string TrinhDoCM { get; private set; }

        /// <summary>
        /// Gets the IDCo Quan.
        /// </summary>
        /// <value>The IDCo Quan.</value>
        public int? IDCoQuan { get; private set; }

        /// <summary>
        /// Gets the IDChuc Vu.
        /// </summary>
        /// <value>The IDChuc Vu.</value>
        public int? IDChucVu { get; private set; }

        /// <summary>
        /// Gets the QTDao Tao.
        /// </summary>
        /// <value>The QTDao Tao.</value>
        public string QTDaoTao { get; private set; }

        /// <summary>
        /// Gets the QTCong Tac.
        /// </summary>
        /// <value>The QTCong Tac.</value>
        public string QTCongTac { get; private set; }

        /// <summary>
        /// Gets the Kinh Nghiem NN.
        /// </summary>
        /// <value>The Kinh Nghiem NN.</value>
        public string KinhNghiemNN { get; private set; }

        /// <summary>
        /// Gets the Nghien Cuu TGia.
        /// </summary>
        /// <value>The Nghien Cuu TGia.</value>
        public string NghienCuuTGia { get; private set; }

        /// <summary>
        /// Gets the Ngoai Ngu Tin Hoc.
        /// </summary>
        /// <value>The Ngoai Ngu Tin Hoc.</value>
        public string NgoaiNguTinHoc { get; private set; }

        /// <summary>
        /// Gets the Khen Thuong Ky Luat.
        /// </summary>
        /// <value>The Khen Thuong Ky Luat.</value>
        public string KhenThuongKyLuat { get; private set; }

        /// <summary>
        /// Gets the HTap NCuu NNgoai.
        /// </summary>
        /// <value>The HTap NCuu NNgoai.</value>
        public string HTapNCuuNNgoai { get; private set; }

        /// <summary>
        /// Gets the IDBo Phan.
        /// </summary>
        /// <value>The IDBo Phan.</value>
        public int IDBoPhan { get; private set; }

        #endregion

        #region Factory Methods

        /// <summary>
        /// Factory method. Loads a <see cref="DIC_CanBo_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        /// <returns>A reference to the fetched <see cref="DIC_CanBo_Info"/> object.</returns>
        internal static DIC_CanBo_Info GetDIC_CanBo_Info(SafeDataReader dr)
        {
            DIC_CanBo_Info obj = new DIC_CanBo_Info();
            obj.Fetch(dr);
            return obj;
        }

        #endregion

        #region Constructor

        /// <summary>
        /// Initializes a new instance of the <see cref="DIC_CanBo_Info"/> class.
        /// </summary>
        /// <remarks> Do not use to create a Csla object. Use factory methods instead.</remarks>
        private DIC_CanBo_Info()
        {
            // Prevent direct creation
        }

        #endregion

        #region Data Access

        /// <summary>
        /// Loads a <see cref="DIC_CanBo_Info"/> object from the given SafeDataReader.
        /// </summary>
        /// <param name="dr">The SafeDataReader to use.</param>
        private void Fetch(SafeDataReader dr)
        {
            // Value properties
            ID = data.ID;
            HoTen = data.HoTen;
            IDGioiTinh = data.IDGioiTinh;
            LoadProperty(NgaySinhProperty, data.NgaySinh);
            IDTinh = data.IDTinh;
            ChoOHiennay = data.ChoOHiennay;
            IDQuocGia = data.IDQuocGia;
            LoadProperty(NgayVaoDangProperty, data.NgayVaoDang);
            TrinhDoCM = data.TrinhDoCM;
            IDCoQuan = data.IDCoQuan;
            IDChucVu = data.IDChucVu;
            QTDaoTao = data.QTDaoTao;
            QTCongTac = data.QTCongTac;
            KinhNghiemNN = data.KinhNghiemNN;
            NghienCuuTGia = data.NghienCuuTGia;
            NgoaiNguTinHoc = data.NgoaiNguTinHoc;
            KhenThuongKyLuat = data.KhenThuongKyLuat;
            HTapNCuuNNgoai = data.HTapNCuuNNgoai;
            IDBoPhan = data.IDBoPhan;
            var args = new DataPortalHookArgs(dr);
            OnFetchRead(args);
        }

        #endregion

        #region Pseudo Events

        /// <summary>
        /// Occurs after the low level fetch operation, before the data reader is destroyed.
        /// </summary>
        partial void OnFetchRead(DataPortalHookArgs args);

        #endregion

    }
}
