<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="gridViewCanBoTDC1.Selected_ListItem" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAD5EYW5oTXVjLCBWZXJzaW9uPTEuMC4wLjAsIEN1bHR1cmU9bmV1
        dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbAwDAAAAigFEYW5oTXVjLCBWZXJzaW9uPTEuMC4wLjAsIEN1
        bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dLCBDc2xhLCBWZXJzaW9uPTQuMy4xMy4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTkzYmU1ZmRjMDkzZTRjMzAMBAAAAJcBQ3Ns
        YSwgVmVyc2lvbj00LjMuMTMuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj05M2JlNWZk
        YzA5M2U0YzMwXV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVi
        bGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQwFAAAAjQFEYW5oTXVjLCBWZXJzaW9uPTEuMC4wLjAs
        IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49bnVsbF1dLCBtc2NvcmxpYiwgVmVyc2lvbj00
        LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAA
        ABpEYW5oTXVjLkxJQi5ESUNfQ2FuQm9fQ29sbA4AAAAwQnVzaW5lc3NCaW5kaW5nTGlzdEJhc2VgMitf
        Y29tcGxldGVseVJlbW92ZUNoaWxkJkJ1c2luZXNzQmluZGluZ0xpc3RCYXNlYDIrX2RlbGV0ZWRMaXN0
        JEJ1c2luZXNzQmluZGluZ0xpc3RCYXNlYDIrX2VkaXRMZXZlbCJCdXNpbmVzc0JpbmRpbmdMaXN0QmFz
        ZWAyK19pc0NoaWxkNEJ1c2luZXNzQmluZGluZ0xpc3RCYXNlYDIrX3NlcmlhbGl6YWJsZVNhdmVkSGFu
        ZGxlcnMrRXh0ZW5kZWRCaW5kaW5nTGlzdGAxK19zZXJpYWxpemFibGVIYW5kbGVycxdCaW5kaW5nTGlz
        dGAxK2FkZE5ld1BvcyRCaW5kaW5nTGlzdGAxK3JhaXNlTGlzdENoYW5nZWRFdmVudHMkQmluZGluZ0xp
        c3RgMStyYWlzZUl0ZW1DaGFuZ2VkRXZlbnRzFkJpbmRpbmdMaXN0YDErYWxsb3dOZXcXQmluZGluZ0xp
        c3RgMSthbGxvd0VkaXQZQmluZGluZ0xpc3RgMSthbGxvd1JlbW92ZR1CaW5kaW5nTGlzdGAxK3VzZXJT
        ZXRBbGxvd05ldxJDb2xsZWN0aW9uYDEraXRlbXMABAAABAQAAAAAAAAABAEyQ3NsYS5Db3JlLk1vYmls
        ZUxpc3RgMVtbRGFuaE11Yy5MSUIuRElDX0NhbkJvX0luZm8DAAAACAEvU3lzdGVtLkV2ZW50SGFuZGxl
        cmAxW1tDc2xhLkNvcmUuU2F2ZWRFdmVudEFyZ3MEAAAANlN5c3RlbS5FdmVudEhhbmRsZXJgMVtbQ3Ns
        YS5Db3JlLlJlbW92aW5nSXRlbUV2ZW50QXJncwQAAAAIAQEBAQEBPVN5c3RlbS5Db2xsZWN0aW9ucy5H
        ZW5lcmljLkxpc3RgMVtbRGFuaE11Yy5MSUIuRElDX0NhbkJvX0luZm8FAAAAAgAAAAAKAAAAAAAKCv//
        //8BAQEBAQEJBgAAAAUGAAAAPVN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbRGFuaE11
        Yy5MSUIuRElDX0NhbkJvX0luZm8DAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgQAABxEYW5oTXVjLkxJ
        Qi5ESUNfQ2FuQm9fSW5mb1tdAgAAAAgIBQAAAAkHAAAAAAAAAAAAAAAHBwAAAAABAAAAAAAAAAQaRGFu
        aE11Yy5MSUIuRElDX0NhbkJvX0luZm8CAAAACw==
</value>
  </data>
</root>